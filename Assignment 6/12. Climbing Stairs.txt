//https://leetcode.com/problems/climbing-stairs/
// author: ayush dwivedi

#include "bits/stdc++.h"

using namespace std;
#define debug(...) cout<< " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] " ;
typedef long long int ll;
const ll mod = 1e9 + 7;


bool safe(vector<int> &a, int n, int dist, int c){
    int placed=1;
    int prev=a[0];
    for(int i=1;i<n;i++){
        if(a[i]-prev >=dist){
            prev=a[i];
            placed++;
            if(placed>=c)   return true;
        }
    }
    return (placed>=c);
}
int climbStairs(int n) {
    int dp[n+1];
    if(n<=2){
        return(n==0?0:(n==1?1:2));
    }
    dp[0]=0,dp[1]=1,dp[2]=2;

    for(int i=3;i<=n;i++)   dp[i]=dp[i-1]+dp[i-2];
    return dp[n];
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int n;
    cin>>n;
    cout<<climbStairs(n);
}