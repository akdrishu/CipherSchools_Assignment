//0 - 1 Knapsack problem
// author: ayush dwivedi

#include "bits/stdc++.h"

using namespace std;
#define debug(...) cout<< " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] " ;
typedef long long int ll;
const ll mod = 1e9 + 7;

int main() {
    int n,W;
    cin>>n>>W;
    int wt[n],val[n];
    for (int i = 0; i < n; ++i) {
        cin>>wt[i]>>val[i];
    }
    vector<vector<int>> dp(n+1,vector<int>(W+1,0));
    for (int i = 1; i <=n; ++i) {
        for (int j = 1; j <=W ; ++j) {
            if(wt[i-1] > W) dp[i][j]=dp[i-1][j];
            else    dp[i][j]=max(dp[i-1][j],dp[i-1][j-wt[i-1]]+val[i-1]);
        }
    }
    cout<<dp[n][W];
}