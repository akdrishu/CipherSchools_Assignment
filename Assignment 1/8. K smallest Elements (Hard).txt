//https://stackoverflow.com/questions/51265678/algorithm-to-find-k-smallest-numbers-in-an-array-in-same-order-using-o1-auxili
// author: Ayush Dwivedi
#include "bits/stdc++.h"

using namespace std;
#define debug(...) cout<< " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] " ;
typedef long long int ll;
const ll mod = 1e9 + 7;


void solve() {
    int n, k;
    cin >> n >> k;
    int arr[n];
    int curr_max = -1, index_max;
    for (int i = 0; i < n; ++i) {
        cin >> arr[i];
        if (i < k) {
            if (curr_max < arr[i]) curr_max = arr[i], index_max = i;
        }
    }
    for (int i = k; i < n; ++i) {
        if (arr[i] < curr_max) {
            while (index_max < k - 1) {
                swap(arr[index_max], arr[index_max + 1]);
                index_max++;
            }
            arr[k-1] = arr[i];
            // updating curr_max and index_max
            curr_max=-1;
            for (int j = 0; j < k; ++j) {

                if (curr_max < arr[j]) curr_max = arr[j], index_max = j;

            }
        }

    }
    for (int i = 0; i < k; ++i) {
        cout << arr[i] << " ";
    }

}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int tt;
    cin >> tt;
    while (tt--) {
        solve();
    }
}
