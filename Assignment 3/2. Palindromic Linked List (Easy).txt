 // https://www.geeksforgeeks.org/function-to-check-if-a-singly-linked-list-is-palindrome/
// author: ayush dwivedi

#include <bits/stdc++.h>

using namespace std;
#define debug(...) cout<< " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] " ;

class node{
public:
    int data;
    node *next;
    node(int x){
        this->data=x;
        next=NULL;
    }
    void print(node *head){
        node *temp=head;
        while(temp!=NULL){
            cout<<temp->data<<" ";
            temp=temp->next;
        }
    }
};
node *ans;
node* reverse(node *head){
    if(head->next==NULL) {ans=head; return (head);}
    node* temp=reverse(head->next);
    temp->next=head;
    head->next=NULL;
    return head;
}
int main() {
    ios_base::sync_with_stdio(0);
    int n;
    cin>>n;
    int x;
    cin>>x;
    node *head= new node(x);
    node *prev= head;
    for (int i = 0; i < n-1; ++i) {
        int y;
        cin>>y;
        node *temp= new node(y);
        prev->next=temp;
        prev=temp;
    }
    head->print(head);
    cout<<endl;
    node *temp=head;
    for (int i = 0; i < n/2; ++i) {
        temp=temp->next;
    }
    temp=reverse(temp);
    bool ispalindrom=true;
    for (int i = 0; i < n/2; ++i) {
        if(ans->data!=head->data){
            ispalindrom=false;
            break;
        }
        head=head->next,ans=ans->next;
    }
    cout<<(ispalindrom?"palidrom":"not a palindrom");
}

