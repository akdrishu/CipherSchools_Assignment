//https://leetcode.com/problems/reorder-list/
// author: ayush dwivedi

#include <bits/stdc++.h>

using namespace std;
#define debug(...) cout<< " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] " ;

class node {
public:
    int data;
    node *next;

    node(int x) {
        this->data = x;
        next = NULL;
    }

    void print(node *head) {
        cout << "the linked list is: ";
        node *temp = head;
        while (temp != NULL) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

node *ll_creation(int n, node *head) {
    int x;
    cin >> x;
    head = new node(x);
    node *prev = head;
    for (int i = 0; i < n - 1; ++i) {
        int y;
        cin >> y;
        node *temp = new node(y);
        prev->next = temp;
        prev = temp;
    }
    return head;
}
int len(node *head){
    int x=0;
    while(head){
        x++;
        head=head->next;
    }
    return x;
}
node *ans;
node* reverse(node *freq){
    if(freq->next==NULL) { ans=freq; return freq; }
    node* temp1=reverse( freq->next);
    temp1->next=freq;
    freq->next=NULL;
    return freq;
}
void reorderList(node* head) {
    int n= len(head);
    if(n==0||n==1)    return;
    node *temp=head, *prev;
    for(int i=0;i<n/2;i++){
        prev=temp;
        temp=temp->next;
    }
    prev->next=NULL;
    reverse(temp);
    node *temp1= head;

    for(int i=0;i<n-1;i++){
        if(i%2==0){
            prev=temp1->next;
            temp1->next=ans;
            temp1=prev;
        }else{
            prev=ans->next;
            if(temp1)   ans->next=temp1;
            ans=prev;
        }
    }
    if(prev!=NULL){
        temp1=ans;
        ans->next=NULL;
    }
    ans->next=NULL;
}
int main() {
    ios_base::sync_with_stdio(0);
    int size;
    cin>>size;
    node *head;
    head=ll_creation(size,head);
    reorderList(head);
    head->print(head);
}

