//implementing stack using two queues
// author: ayush dwivedi

#include "bits/stdc++.h"

using namespace std;
#define debug(...) cout<< " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] " ;
typedef long long int ll;
const ll mod = 1e9 + 7;

class QueueStack{
private:
    queue<int> q1;
    queue<int> q2;
public:
    void push(int);
    int pop();
};


int main()
{
    int T;
    cin>>T;
    while(T--)
    {
        QueueStack *qs = new QueueStack();

        int Q;
        cin>>Q;
        while(Q--){
            int QueryType=0;
            cin>>QueryType;
            if(QueryType==1)
            {
                int a;
                cin>>a;
                qs->push(a);
            }else if(QueryType==2){
                cout<<qs->pop()<<" ";

            }
        }
        cout<<endl;
    }
}

void QueueStack :: push(int x)
{
    if(q1.empty()) {
        q1.push(x);
        return ;
    }
    while(!q1.empty()){
        q2.push(q1.front());
        q1.pop();
    }
    q1.push(x);
    while(!q2.empty()){
        q1.push(q2.front());
        q2.pop();
    }
    return;
}

int QueueStack :: pop()
{

    if(q1.empty())  return -1;
    int temp=q1.front();
    q1.pop();
    return temp;
}